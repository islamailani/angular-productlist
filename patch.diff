diff --git a/ClientApp/src/app/app.module.ts b/ClientApp/src/app/app.module.ts
index 5157e75..8597f85 100644
--- a/ClientApp/src/app/app.module.ts
+++ b/ClientApp/src/app/app.module.ts
@@ -3,6 +3,7 @@ import { NgModule } from '@angular/core';
 import { FormsModule } from '@angular/forms';
 import { HttpClientModule } from '@angular/common/http';
 import { RouterModule } from '@angular/router';
+import { StoreModule } from '@ngrx/store';
 
 import { AppComponent } from './app.component';
 import { NavMenuComponent } from './nav-menu/nav-menu.component';
diff --git a/ClientApp/src/app/store/index.ts b/ClientApp/src/app/store/index.ts
new file mode 100644
index 0000000..6e51da9
--- /dev/null
+++ b/ClientApp/src/app/store/index.ts
@@ -0,0 +1,38 @@
+import { NgModule } from '@angular/core';
+import { Store, StoreModule } from '@ngrx/store';
+
+import { ActionReducer, Action, combineReducers } from '@ngrx/store';
+import { compose } from '@ngrx/core/compose';
+
+// reducers
+import { productsReducer, ProductList, ProductListActions } from './product-list/product-list.reducer';
+
+// plugins
+
+/**
+ * we treat each reducer like a table in a database. This means
+ * our top level state interface is just a map of keys to inner state types.
+ */
+export interface InsiteState {
+  products: ProductList;
+}
+
+const actions = [
+    ProductListActions
+];
+
+const reducers = { productsReducer };
+
+@NgModule({
+  imports: [
+    StoreModule.provideStore(reducers),
+  ],
+  declarations: [
+
+  ],
+  exports: [
+
+  ],
+  providers: [ ...actions ]
+})
+export class CoreStoreModule {};
diff --git a/ClientApp/src/app/store/product-list/index.ts b/ClientApp/src/app/store/product-list/index.ts
new file mode 100644
index 0000000..1e33042
--- /dev/null
+++ b/ClientApp/src/app/store/product-list/index.ts
@@ -0,0 +1,2 @@
+export * from './product-list.actions'
+export * from './product-list.reducer'
\ No newline at end of file
diff --git a/ClientApp/src/app/store/product-list/product-list.actions.ts b/ClientApp/src/app/store/product-list/product-list.actions.ts
new file mode 100644
index 0000000..a7de43d
--- /dev/null
+++ b/ClientApp/src/app/store/product-list/product-list.actions.ts
@@ -0,0 +1,17 @@
+import { Injectable } from '@angular/core';
+import { Action } from '@ngrx/store';
+import { ProductList } from './product-list.reducer'
+
+@Injectable()
+export class ProductListActions {
+    static LOAD = '[ProductList] LOAD CATEGORY';    
+
+    loadCategory(products: ProductList) : Action {
+        return {
+            type: ProductListActions.LOAD,
+            payload: products
+        }
+    }
+}
+
+
diff --git a/ClientApp/src/app/store/product-list/product-list.reducer.ts b/ClientApp/src/app/store/product-list/product-list.reducer.ts
new file mode 100644
index 0000000..ba1ae15
--- /dev/null
+++ b/ClientApp/src/app/store/product-list/product-list.reducer.ts
@@ -0,0 +1,15 @@
+import { ActionReducer, Action } from '@ngrx/store';
+import { ProductListActions } from './product-list.actions';
+import ProductDto = Insite.Catalog.Services.Dtos.ProductDto;
+
+export interface ProductList extends Array<ProductDto> {};
+
+export const productsReducer: ActionReducer<ProductList> = (state: ProductList = [], action: Action) => {
+    switch(action.type){
+        case ProductListActions.LOAD:
+            return [...state, action.payload ];
+
+        default:
+            return state;
+    }
+}
diff --git a/insite.csproj b/insite.csproj
index f9c8d89..4446125 100644
--- a/insite.csproj
+++ b/insite.csproj
@@ -25,11 +25,15 @@
 
   <ItemGroup>
     <None Remove="ClientApp\src\app\app.server.module.ts" />
+    <None Remove="ClientApp\src\app\store\index.ts" />
+    <None Remove="ClientApp\src\app\store\product-list\product-list.actions.ts" />
     <None Remove="ClientApp\src\main.server.ts" />
   </ItemGroup>
 
   <ItemGroup>
     <TypeScriptCompile Include="ClientApp\src\app\app.server.module.ts" />
+    <TypeScriptCompile Include="ClientApp\src\app\store\index.ts" />
+    <TypeScriptCompile Include="ClientApp\src\app\store\product-list\product-list.actions.ts" />
     <TypeScriptCompile Include="ClientApp\src\main.server.ts" />
   </ItemGroup>
 
